(this.webpackJsonptetris=this.webpackJsonptetris||[]).push([[4],{40:function(e,t,s){"use strict";s.r(t),s.d(t,"default",(function(){return _}));var i=s(0),r=s(37),h=s.n(r),n=s(8),c=s(21),l=s(1);function a(){const e=Object(n.b)(c.e);return Object(l.jsxs)("div",{className:"tetris-score",children:[Object(l.jsxs)("span",{children:["Lines: ",e.lines]}),Object(l.jsxs)("span",{style:{marginLeft:"1rem"},children:["Score: ",e.score]}),Object(l.jsxs)("span",{style:{marginLeft:"1rem"},children:["Level: ",e.level]})]})}const o=20;let d;!function(e){e[e["#ed4938"]=0]="#ed4938",e[e["#adc607"]=1]="#adc607",e[e["#f4c10d"]=2]="#f4c10d",e[e["#de3974"]=3]="#de3974",e[e["#7b3dba"]=4]="#7b3dba",e[e["#f87117"]=5]="#f87117",e[e["#03cec2"]=6]="#03cec2"}(d||(d={}));const v={1:40,2:120,3:300,4:1200},g=function(){const e=new Map;return e.set(0,10),e.set(1,20),e.set(2,30),e.set(3,40),e.set(4,50),e.set(5,60),e.set(6,70),e.set(7,80),e.set(8,90),e.set(9,100),e.set(10,100),e.set(11,100),e.set(12,100),e.set(13,100),e.set(14,100),e.set(15,100),e.set(16,110),e.set(17,120),e.set(18,130),e.set(19,140),e.set(20,150),e.set(21,160),e.set(22,170),e.set(23,180),e.set(24,190),e.set(25,200),e}();const u=function(){const e=new Map;return e.set(0,798.7),e.set(1,715.5),e.set(2,632.3),e.set(3,549.1),e.set(4,465.9),e.set(5,382.7),e.set(6,299.5),e.set(7,216.3),e.set(8,133.1),e.set(9,99.85),e.set(10,83.2),e.set(11,83.2),e.set(12,83.2),e.set(13,66.55),e.set(14,66.55),e.set(15,66.55),e.set(16,49.9),e.set(17,49.9),e.set(18,49.9),e.set(19,33.3),e.set(20,33.3),e.set(21,33.3),e.set(22,33.3),e.set(23,33.3),e.set(24,33.3),e.set(25,33.3),e.set(26,33.3),e.set(27,33.3),e.set(28,33.3),e.set(29,16.65),e}();var b=s(22);const f=[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],m=[[0,0,0],[2,2,2],[0,0,2]],p=[[0,0,0],[3,3,3],[3,0,0]],x=[[0,0,0,0],[0,4,4,0],[0,4,4,0],[0,0,0,0]],w=[[0,0,0],[0,5,5],[5,5,0]],y=[[0,0,0],[6,6,6],[0,6,0]],P=[[0,0,0],[7,7,0],[0,7,7]];class O{constructor(){this.score=0,this.lines=0,this.playfield=this.createPlayfield(),this.activePiece=this.createPiece(),this.nextPiece=this.createPiece(),this.isOver=!1,this.currentLvl=0,this.nextLvlUp=g.get(this.currentLvl)}get level(){return Math.floor(.1*this.lines)}getState(){const e=this.createPlayfield(),{blocks:t,x:s,y:i}=this.activePiece;for(let r=0;r<this.playfield.length;r++){e[r]=[];for(let t=0;t<this.playfield[r].length;t++)e[r][t]=this.playfield[r][t]}for(let r=0;r<t.length;r++)for(let h=0;h<t[r].length;h++)t[r]&&t[r][h]&&e[i+r]&&(e[i+r][s+h]=t[r][h]);return{playfield:e,next:this.nextPiece,level:this.level,isOver:this.isOver}}createPlayfield(){const e=[];for(let t=0;t<20;t++){e[t]=[];for(let s=0;s<10;s++)e[t][s]=0}return e}createPiece(){const e="IJLOSTZ"[Math.floor(7*Math.random())],t={x:0,y:0};return t.blocks=function(e){switch(e){case"I":return f;case"J":return m;case"L":return p;case"O":return x;case"S":return w;case"T":return y;case"Z":return P}throw new Error("wrong block type")}(e),t.x=Math.ceil((10-t.blocks[0].length)/2),t.y=-1,t}movePeaceLeft(){this.activePiece.x-=1,this.isCollision()&&(this.activePiece.x+=1)}movePeaceRight(){this.activePiece.x+=1,this.isCollision()&&(this.activePiece.x-=1)}movePeaceDown(){if(!this.isOver&&(this.activePiece.y+=1,this.isCollision())){this.activePiece.y-=1,this.lockPiece();const e=this.clearLines();this.updateScore(e),this.updatePieces()}}rotatePiece(){this.rotateBlocks(),this.isCollision()&&this.rotateBlocks(!1)}rotateBlocks(e=!0){const{blocks:t}=this.activePiece,s=t.length,i=Math.floor(s/2),r=s-1;for(let h=0;h<i;h++)for(let s=h;s<r-h;s++){const i=t[h][s];e?(t[h][s]=t[r-s][h],t[r-s][h]=t[r-h][r-s],t[r-h][r-s]=t[s][r-h],t[s][r-h]=i):(t[h][s]=t[s][r-h],t[s][r-h]=t[r-h][r-s],t[r-h][r-s]=t[r-s][h],t[r-s][h]=i)}}isCollision(){const{blocks:e,x:t,y:s}=this.activePiece;for(let i=0;i<e.length;i++)for(let r=0;r<e[i].length;r++)if(e[i][r]&&(void 0===this.playfield[s+i]||void 0===this.playfield[s+i][t+r]||this.playfield[s+i][t+r]))return!0;return!1}lockPiece(){const{blocks:e,x:t,y:s}=this.activePiece;if(s<0)return this.isOver=!0,void b.a.dispatch(Object(c.b)(!0));for(let r=0;r<e.length;r++)for(let h=0;h<e[r].length;h++)if(e[r]&&e[r][h])try{this.playfield[s+r][t+h]=e[r][h]}catch(i){this.isOver=!0}}clearLines(){const e=[];for(let s=19;s>=0;s--){let t=0;for(let e=0;e<10;e++)this.playfield[s][e]&&(t+=1);if(0===t)break;10===t&&e.unshift(s)}let t;for(t of e)this.playfield.splice(t,1),this.playfield.unshift(new Array(10).fill(0));return e.length}updateScore(e){var t;e>0&&(this.score+=(t=this.level,v[e]*(t+1)),this.lines+=e,this.nextLvlUp-=e,this.nextLvlUp<=0&&this.lvlUp()),b.a.dispatch(Object(c.c)({score:this.score,level:this.level,lines:this.lines}))}lvlUp(){const e=this.nextLvlUp,t=g.get(this.currentLvl);this.currentLvl=this.currentLvl+1,this.nextLvlUp=t?t+e:200+e}updatePieces(){this.activePiece=this.nextPiece,this.nextPiece=this.createPiece()}}class j{constructor(e,t,s,i,r){this.context=void 0,this.width=void 0,this.height=void 0,this.rows=void 0,this.columns=void 0,this.blockWidth=void 0,this.blockHeight=void 0,this.borderWidth=void 0,this.width=t,this.height=s,this.rows=i,this.columns=r,this.context=e,this.borderWidth=2,this.blockWidth=(this.width-2*this.borderWidth)/r,this.blockHeight=(this.height-2*this.borderWidth)/i}render({playfield:e,next:t}){this.clearScreen(),this.renderPlayfield(e),this.renderNext(t)}clearScreen(){this.context.clearRect(0,0,this.width,this.height)}renderStartScreen(){this.drawMessages([{message:"Press ENTER to play game",x:this.width/2,y:this.height/2}])}renderPauseScreen(){this.drawMessages([{message:"PAUSE",x:this.width/2,y:(this.height-25)/2},{message:"Press ENTER to resume",x:this.width/2,y:(this.height+25)/2}])}renderGameOverScreen(){this.drawMessages([{message:"GAME OVER",x:this.width/2,y:this.height/2}])}drawMessages(e){this.context.fillStyle="rgba(0,0,0,.8)",this.context.fillRect(0,0,this.width,this.height),this.context.fillStyle="white",this.context.font="18px sans-serif",this.context.textAlign="center",this.context.textBaseline="middle",e.forEach((e=>{this.context.fillText(e.message,e.x,e.y)}))}renderPlayfield(e){for(let t=0;t<e.length;t++){const s=e[t];for(let i=0;i<s.length;i++){e[t][i]&&this.renderBlock(this.borderWidth+i*this.blockWidth,this.borderWidth+t*this.blockHeight,this.blockWidth,this.blockHeight,d[e[t][i]-1])}}}renderNext(e){const{blocks:t}=e;for(let s=0;s<t.length;s++)for(let e=0;e<t[s].length;e++)t[s][e]&&(this.context.fillStyle=d[t[s][e]-1]+"33",this.context.fillRect(10*e+(this.width-40),10*s+10,10,10))}renderBlock(e,t,s,i,r){this.context.fillStyle=r,this.context.strokeStyle="#333",this.context.lineWidth=2,this.context.fillRect(e,t,s,i),this.context.strokeRect(e,t,s,i)}}class k{constructor(e,t){this.game=void 0,this.view=void 0,this.intervalID=void 0,this.isPlaying=!1,this.isOver=!1,this.gameSpeed=void 0,this.currentLvl=void 0,this.game=e,this.view=t,this.intervalID=null,this.currentLvl=this.game.getState().level,this.gameSpeed=u.get(this.currentLvl),h.a?setTimeout((()=>{this.handleMobileActions()}),100):document.addEventListener("keydown",this.handleKeydown.bind(this)),this.view.renderStartScreen()}update(){const{level:e,isOver:t}=this.game.getState();if(t)return this.isOver=!0,void this.handleGameOver();this.game.movePeaceDown(),this.view.render(this.game.getState()),this.currentLvl!==e&&(this.currentLvl=e,this.gameSpeed=u.get(this.currentLvl),this.stopTimer(),this.startTimer())}play(){this.isPlaying=!0,this.startTimer(),this.update()}pause(){this.isPlaying=!1,this.stopTimer(),this.view.renderPauseScreen()}startTimer(){this.intervalID||(this.intervalID=setInterval((()=>{this.update()}),this.gameSpeed))}stopTimer(){this.intervalID&&(clearInterval(this.intervalID),this.intervalID=null)}handleKeydown(e){switch(e.key.toLowerCase()){case"enter":this.handlePause();break;case"arrowleft":this.handleLeft();break;case"arrowup":this.handleUp();break;case"arrowright":this.handleRight();break;case"arrowdown":this.handleDown()}}handleMobileActions(){const e=document.querySelector("#pause"),t=document.querySelector("#top"),s=document.querySelector("#bottom"),i=document.querySelector("#left"),r=document.querySelector("#right");e&&t&&s&&i&&r?(e.addEventListener("click",this.handlePause.bind(this)),t.addEventListener("click",this.handleUp.bind(this)),s.addEventListener("click",this.handleDown.bind(this)),i.addEventListener("click",this.handleLeft.bind(this)),r.addEventListener("click",this.handleRight.bind(this))):setTimeout((()=>{this.handleMobileActions()}),100)}handlePause(){this.isOver||(this.view.render(this.game.getState()),this.isPlaying?this.pause():this.play())}handleUp(){this.isOver||(this.game.rotatePiece(),this.view.render(this.game.getState()))}handleDown(){this.isOver||(this.game.movePeaceDown(),this.view.render(this.game.getState()))}handleLeft(){this.isOver||(this.game.movePeaceLeft(),this.view.render(this.game.getState()))}handleRight(){this.isOver||(this.game.movePeaceRight(),this.view.render(this.game.getState()))}handleGameOver(){this.isPlaying=!1,this.stopTimer(),this.view.renderGameOverScreen()}}const S={controller:void 0,game:void 0,view:void 0};function L(){const e=Object(i.useRef)(null),t=Object(n.b)(c.d),[s,r]=Object(i.useState)(0);Object(i.useEffect)((()=>{const t=e.current;if(null===t||void 0===t?void 0:t.getContext("2d")){const e=new O,s=new j(t.getContext("2d"),320,640,o,10),i=new k(e,s);S.game=e,S.view=s,S.controller=i}else console.error("problems with canvas")}),[s]);return Object(l.jsxs)(l.Fragment,{children:[Object(l.jsxs)("div",{style:{marginBottom:"1rem"},children:[t&&Object(l.jsx)("button",{className:"tetris__reset",onClick:()=>{b.a.dispatch(Object(c.b)(!1)),b.a.dispatch(Object(c.c)({score:0,level:0,lines:0})),r((e=>e+1));const t=e.current;if(null===t||void 0===t?void 0:t.getContext("2d")){t.getContext("2d").clearRect(0,0,10,o)}else console.error("problems with canvas")},children:"reset"}),Object(l.jsx)(a,{})]}),Object(l.jsxs)("div",{className:"tetris__canvas--wrapper"+(h.a," mobile"),children:[!t&&Object(l.jsxs)("div",{className:"tetris__game-btn--wrapper left",children:[Object(l.jsx)("button",{id:"pause",className:"tetris__game-btn pause",children:"||"}),Object(l.jsx)("button",{id:"top",className:"tetris__game-btn",children:"\u2191"}),Object(l.jsx)("button",{id:"bottom",className:"tetris__game-btn",children:"\u2193"})]}),Object(l.jsx)("canvas",{className:"tetris__canvas",width:"320",height:"640",ref:e}),!t&&Object(l.jsxs)("div",{className:"tetris__game-btn--wrapper right",children:[Object(l.jsx)("button",{id:"left",className:"tetris__game-btn",children:"\u2190"}),Object(l.jsx)("button",{id:"right",className:"tetris__game-btn",children:"\u2192"})]})]})]})}function _(){return Object(l.jsx)(l.Fragment,{children:Object(l.jsx)("div",{className:"wrapper ta__center",children:Object(l.jsx)(L,{})})})}}}]);
//# sourceMappingURL=4.16ef64f7.chunk.js.map